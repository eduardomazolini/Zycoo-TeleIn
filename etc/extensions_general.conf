;!
;! Automatically generated configuration file
;! Filename: extensions_general.conf (/etc/asterisk/extensions_general.conf)
;! Generator: Manager
;! Creation Date: Mon Mar 14 10:15:54 2011
;!

[general]
static = yes
writeprotect = no
autofallthrough = no
clearglobalvars = yes
priorityjumping = no

[macro-trunkdial-failover]
exten => s,1,SET(CHAN=${CUT(CHANNEL,/,2)})
exten => s,n,Set(DYNAMIC_FEATURES=nway-start)
exten => s,n,GotoIf($["${ARG1:0:11}" != "${MAGICO}"]?comum)
exten => s,n,SET(CELULAR=${ARG1:11})
exten => s,n,ExecIf("${CELULAR:0:1}" == "0",SET,CELULAR=${CELULAR:1})
exten => s,n,SET(CELLEN=${LEN(${CELULAR})})
exten => s,n,ExecIf(${CELLEN} < 11,SET,CELULAR=19${CELULAR})
exten => s,n,AGI(TeleIn.sh,${CELULAR})
exten => s,n,NoOp("Ate aqui tudo certo")
exten => s,n,NoOp(${ARG1:0:11})
exten => s,n,NoOp(${OPERADORA})
exten => s,n,NoOp(${MAGICO})
exten => s,n,execIf(${ARG1:0:11}==${MAGICO},SET,ARG1=${${OPERADORA}}${ARG1:11})
exten => s,n(comum),Set(num=1)
exten => s,n,GotoIf($[${CUT(CHANNEL,/,1)} = Zap]?zap)
exten => s,n,SET(CHAN=${CUT(CHAN,-,1)})
exten => s,n,SET(DOC=${CHAN})
exten => s,n,Goto(check)
exten => s,n(zap),SET(CHAN=Analog_${CUT(CHAN,-,1)})
exten => s,n,SET(DOC=${CALLERID(num)})
exten => s,n(check),execIf($[${LEN(${DB(OCID/${DOC})})} > 0],SET,CALLERID(all)=${DB(OCID/${DOC})})
exten => s,n,GotoIf($[${LEN(${RECORDOUT_${CHAN}})} > 0]?record:dial)
exten => s,n(record),Macro(stdexten-record,${CUT(ARG1,/,3)},${DOC},${CALLERID(num)},${RECORDOUT_${CHAN}})
exten => s,n(dial),Dial(${ARG${num}})
exten => s,n,Set(num=$[${num}+1])
exten => s,n,GotoIf(${LEN(${ARG${num}})}>0?s-${DIALSTATUS},1:s-out,1)
exten => s-CHANUNAVAIL,1,Goto(s,dial)
exten => s-CONGESTION,1,Goto(s,dial)
exten => s-out,1,StopMixMonitor
exten => s-out,n,Hangup()

[local]
ignorepat => 9
include => default
include => parkedcalls

[macro-user-context]
exten => s,1,GotoIf($[${CUT(ARG1,/,1)} = Zap]?zap)
exten => s,n,GotoIf($[${CUT(ARG1,/,1)} = IAX2]?iax)
exten => s,n,Set(EXTCONTEXT=${SIPPEER(${ARG1},context)})
exten => s,n,Goto(end)
exten => s,n,Set(EXTCONTEXT=${IAXPEER(${ARG1},context)})
exten => s,n,Goto(end)
exten => s,n(zap),agi(zapcontext.sh,${CUT(ARG1,/,2)})
exten => s,n,Set(EXTCONTEXT=${ZAPCONTEXT})
exten => s,n(end),NoOp(${EXTCONTEXT})

[macro-stdexten]
exten => s,1,SET(CHAN=${CUT(CHANNEL,/,2)})
exten => s,n,Set(DYNAMIC_FEATURES=nway-start)
exten => s,n,Set(EXTTOCALL=${ARG1})
exten => s,n,Set(CFEXT=${DB(CF/${EXTTOCALL})})
exten => s,n,Set(CFUEXT=${DB(CFU/${EXTTOCALL})})
exten => s,n,Set(CFBEXT=${DB(CFB/${EXTTOCALL})})
exten => s,n,GotoIf($[${CUT(CHANNEL,/,1)} = Zap]?zap)
exten => s,n,SET(CHAN=${CUT(CHAN,-,1)})
exten => s,n,SET(DOC=${CHAN})
exten => s,n,Goto(checkrecord)
exten => s,n(zap),SET(CHAN=Analog_${CUT(CHAN,-,1)})
exten => s,n,SET(DOC=${CALLERID(num)})
exten => s,n(checkrecord),GotoIf($[${LEN(${RECORDIN_${ARG1}})} > 0]?recordin)
exten => s,n,GotoIf($[${LEN(${RECORDOUT_${CHAN}})} > 0]?recordout:calldocf)
exten => s,n(recordin),Macro(stdexten-record,${ARG1},${ARG1},${CALLERID(num)},${RECORDIN_${ARG1}})
exten => s,n,Goto(calldocf)
exten => s,n(recordout),Macro(stdexten-record,${ARG1},${DOC},${CALLERID(num)},${RECORDOUT_${CHAN}})
exten => s,n(calldocf),GotoIf($["foo${CFEXT}"!="foo"]?docf,1)
exten => s,n(dial),Dial(${ARG2},${ringTime},${dialSet})
exten => s,n,StopMixMonitor
exten => s,n,Noop(${BLINDTRANSFER})
exten => s,n,GotoIf($["${BLINDTRANSFER}"!=""]?bl,1)
exten => s,n,Set(SV_DIALSTATUS=${DIALSTATUS})
exten => s,n(calldocfu),GosubIf($["${SV_DIALSTATUS}"="NOANSWER" & "foo${CFUEXT}"!="foo"]?docfu,1)
exten => s,n(calldocfb),GosubIf($["${SV_DIALSTATUS}"="BUSY" & "foo${CFBEXT}"!="foo"]?docfb,1)
exten => s,n,Set(DIALSTATUS=${SV_DIALSTATUS})
exten => s,n,Goto(s-${DIALSTATUS},1)
exten => s,n(followme),Macro(stdexten-followme,${ARG1},${ARG2},${FOLLOWME_${ARG1}})
exten => docf,1,Macro(user-context,${ARG1})
exten => docf,n,GotoIf($["foo${EXTCONTEXT}"="foo"]?s-NOANSWER,1)
exten => docf,n(dial),Dial(Local/${CFEXT}@${EXTCONTEXT}/n)
exten => docf,n,Goto(s-${DIALSTATUS},1)
exten => docfu,1,Macro(user-context,${ARG1})
exten => docfu,n,GotoIf($["foo${EXTCONTEXT}"="foo"]?s-${SV_DIALSTATUS},1)
exten => docfu,n(dial),Dial(Local/${CFUEXT}@${EXTCONTEXT}/n)
exten => docfu,n,Return()
exten => docfb,1,Macro(user-context,${ARG1})
exten => docfb,n,GotoIf($["foo${EXTCONTEXT}"="foo"]?s-${SV_DIALSTATUS},1)
exten => docfb,n(dial),Dial(Local/${CFBEXT}@${EXTCONTEXT}/n)
exten => docfb,n,Return()
exten => s-NOANSWER,1,Voicemail(${ARG1},u)
exten => s-NOANSWER,2,Hangup
exten => s-BUSY,1,Voicemail(${ARG1},b)
exten => s-BUSY,2,Hangup
exten => _s-.,1,Goto(s-NOANSWER,1)
exten => a,1,VoicemailMain(${ARG1})
exten => bl,1,Set(ORIG=${CUT(BLINDTRANSFER,-,1)})
exten => bl,n,Dial(${ORIG},${ringTime},${dialSet})

[macro-stdexten-record]
exten = s,1,GotoIf($[${ARG4} = 1]?record)
exten = s,n,GotoIfTime(${ARG4}|${ARG5}?record)
exten = s,n,Goto(unmatch)
exten = s,n(record),System(/bin/sh /etc/zycoo-gui/checkrecord ${ARG2})
exten = s,n,SET(FILENAME=/var/spool/asterisk/monitor/${ARG2}/${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${ARG3}-${ARG1}-${UNIQUEID}.gsm)
exten = s,n,MixMonitor(${FILENAME})
exten = s,n(unmatch),NoOp(leave out record)

[macro-ringgroup-record]
exten = s,1,SET(CHAN=${CUT(CHANNEL,/,2)})
exten = s,n,Set(DYNAMIC_FEATURES=nway-start)
exten = s,n,GotoIf($[${CUT(CHANNEL,/,1)} = Zap]?zap)
exten = s,n,SET(CHAN=${CUT(CHAN,-,1)})
exten = s,n,Goto(checkrecord)
exten = s,n(zap),SET(CHAN=Analog_${CUT(CHAN,-,1)})
exten = s,n(checkrecord),SET(CALLEE=${CHAN})
exten = s,n,SET(CALLER=${CALLERID(ani)})
exten = s,n,GotoIf($[${LEN(${RECORDIN_${CALLEE}})} > 0]?recordin)
exten = s,n,GotoIf($[${LEN(${RECORDOUT_${CALLER}})} > 0]?recordout:exit)
exten = s,n(recordin),SET(DOC=${CALLEE})
exten = s,n,Goto(record)
exten = s,n(recordout),SET(DOC=${CALLER})
exten => s,n(record),System(/bin/sh /etc/zycoo-gui/checkrecord ${DOC})
exten => s,n,SET(FILENAME=/var/spool/asterisk/monitor/${DOC}/${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${CALLER}-${CALLEE}-${UNIQUEID}.gsm)
exten => s,n,MixMonitor(${FILENAME},b)
exten => s,n(exit),NoOp(record check exit.)

[macro-stdexten-followme]
exten = s,1,GotoIf($[${ARG3} > 0]?3)
exten = s,2,Dial(${ARG2},${ARG3},${dialSet})
exten = s,3,Followme(${ARG1},${FOLLOWMEOPTION})
exten = s,4,Voicemail(${ARG1},u)

[macro-page]
exten => s,1,ChanIsAvail(${ARG1}|js)
exten => s,n,GoToIf([${AVAILSTATUS} = "1"]?autoanswer:fail)
exten => s,n(autoanswer),Set(ALERTINFO=Alert-Info: Ring Answer)
exten => s,n(autoanswer),Set(CALLINFO=Call-Info: <uri>\;answer-after=0)
exten => s,n,ExecIf($["${ALERTINFO}" !=""],SIPAddHeader,${ALERTINFO})
exten => s,n,ExecIf($["${CALLINFO}" !=""],SIPAddHeader,${CALLINFO})
exten => s,n,NoOp(Paging)
exten => s,n,Page(${ARG1}|${ARG2}|)
exten => s,n(fail),Hangup

[dialerror]
include = default
exten = s,1,Answer
exten = s,2,SET(COUNT=5)
exten = s,3,Background(ss-noservice)
exten = s,n,WaitExten(3)
exten = s,n,SET(COUNT=$[${COUNT}-1])
exten = s,n,GotoIf($[${COUNT}>0]?3)
exten = s,n,Hangup()

[macro-followme-always]
exten = s,1,Gotoif(${ARG4}?102)
exten = s,2,Goto(default,${ARG3},1)
exten = s,102,Goto(${ARG4},${ARG3},1)

[macro-followme-busy]
exten = s,1,GotoIf($[${LEN(${RECORDIN_${ARG1}})} > 0]?record:dial)
exten = s,n(record),Macro(stdexten-record,${ARG1},${ARG1},${CALLERID(num)},${RECORDIN_${ARG1}})
exten = s,n(dial),Dial(${ARG2},${ARG5},${dialSet})
exten = s,n,StopMixMonitor
exten = s,n,Goto(s-${DIALSTATUS},1)
exten = s-BUSY,1,Gotoif(${ARG4}?102)
exten = s-BUSY,2,Goto(default,${ARG3},1)
exten = s-BUSY,102,Goto(${ARG4},${ARG3},1)
exten = s-NOANSWER,1,Voicemail(u${ARG1})

[macro-followme-noanswer]
exten = s,1,GotoIf($[${LEN(${RECORDIN_${ARG1}})} > 0]?record:dial)
exten = s,n(record),Macro(stdexten-record,${ARG1},${ARG1},${CALLERID(num)},${RECORDIN_${ARG1}})
exten = s,n(dial),Dial(${ARG2},${ARG5},${dialSet})
exten = s,n,StopMixMonitor
exten = s,n,Goto(s-${DIALSTATUS},1)
exten = s-NOANSWER,1,Gotoif(${ARG4}?102)
exten = s-NOANSWER,2,Goto(default,${ARG3},1)
exten = s-NOANSWER,102,Goto(${ARG4},${ARG3},1)
exten = s-BUSY,1,Voicemail(b${ARG1})

[macro-followme-bnoanswer]
exten = s,1,GotoIf($[${LEN(${RECORDIN_${ARG1}})} > 0]?record:dial)
exten = s,n(record),Macro(stdexten-record,${ARG1},${ARG1},${CALLERID(num)},${RECORDIN_${ARG1}})
exten = s,n(dial),Dial(${ARG2},${ARG5},${dialSet})
exten = s,n,StopMixMonitor
exten = s,n,Gotoif(${ARG4}?102)
exten = s,n,Goto(default,${ARG3},1)
exten = s,102,Goto(${ARG4},${ARG3},1)

[parkinghints]
exten => 701,1,ParkedCall(701)
exten => 701,hint,park:701@parkedcalls
exten => 702,1,ParkedCall(702)
exten => 702,hint,park:702@parkedcalls
exten => 703,1,ParkedCall(703)
exten => 703,hint,park:703@parkedcalls
exten => 704,1,ParkedCall(704)
exten => 704,hint,park:704@parkedcalls
exten => 705,1,ParkedCall(705)
exten => 705,hint,park:705@parkedcalls
exten => 706,1,ParkedCall(706)
exten => 706,hint,park:706@parkedcalls
exten => 707,1,ParkedCall(707)
exten => 707,hint,park:707@parkedcalls
exten => 708,1,ParkedCall(708)
exten => 708,hint,park:708@parkedcalls
exten => 709,1,ParkedCall(709)
exten => 709,hint,park:709@parkedcalls
exten => 710,1,ParkedCall(710)
exten => 710,hint,park:710@parkedcalls
exten => 711,1,ParkedCall(711)
exten => 711,hint,park:711@parkedcalls
exten => 712,1,ParkedCall(712)
exten => 712,hint,park:712@parkedcalls
exten => 713,1,ParkedCall(713)
exten => 713,hint,park:713@parkedcalls
exten => 714,1,ParkedCall(714)
exten => 714,hint,park:714@parkedcalls
exten => 715,1,ParkedCall(715)
exten => 715,hint,park:715@parkedcalls
exten => 716,1,ParkedCall(716)
exten => 716,hint,park:716@parkedcalls
exten => 717,1,ParkedCall(717)
exten => 717,hint,park:717@parkedcalls
exten => 718,1,ParkedCall(718)
exten => 718,hint,park:718@parkedcalls
exten => 719,1,ParkedCall(719)
exten => 719,hint,park:719@parkedcalls
exten => 720,1,ParkedCall(720)
exten => 720,hint,park:720@parkedcalls

[ipinfo]
exten => **11,1,agi(wanip.sh)
exten => **11,n,NoOp(${IP_ADD})
exten => **11,n,wait(1)
exten => **11,n,SayAlpha(${IP_ADD})
exten => **11,n,Hangup
exten => **12,1,agi(lanip.sh)
exten => **12,n,NoOp(${IP_ADD})
exten => **12,n,wait(1)
exten => **12,n,SayAlpha(${IP_ADD})
exten => **12,n,Hangup

[app-blacklist-check]
exten => s,1(check),GotoIf($["${BLACKLIST()}"="1"]?blacklisted)
exten => s,n,Set(CALLED_BLACKLIST=1)
exten => s,n,Return()
exten => s,n(blacklisted),Answer
exten => s,n,Wait(1)
exten => s,n,Zapateller()
exten => s,n,Playback(ss-noservice)
exten => s,n,Hangup

[app-blacklist-add]
exten => s,1,Answer
exten => s,n,Wait(1)
exten => s,n,Set(NumLoops=0)
exten => s,n(start),Playback(enter-num-blacklist)
exten => s,n,Set(TIMEOUT(digit)=5)
exten => s,n,Set(TIMEOUT(response)=60)
exten => s,n,Read(blacknr,then-press-pound,,,,)
exten => s,n,SayDigits(${blacknr})
exten => s,n,Playback(if-correct-press&digits/1)
exten => s,n,Noop(Waiting for input)
exten => s,n(end),WaitExten(60,)
exten => s,n,Playback(sorry-youre-having-problems&goodbye)
exten => 1,1,GotoIf($[ "${blacknr}" != ""]?:app-blacklist-add-invalid,s,1)
exten => 1,n,Set(DB(blacklist/${blacknr})=1)
exten => 1,n,Playback(num-was-successfully&added)
exten => 1,n,Wait(1)
exten => 1,n,Hangup

[app-blacklist-add-invalid]
exten => s,1,Set(NumLoops=$[${NumLoops} + 1])
exten => s,n,Playback(pm-invalid-option)
exten => s,n,GotoIf($[${NumLoops} < 3]?app-blacklist-add,s,start)
exten => s,n,Playback(goodbye)
exten => s,n,Hangup

[app-blacklist-remove]
exten => s,1,Answer
exten => s,n,Wait(1)
exten => s,n,Playback(entr-num-rmv-blklist)
exten => s,n,Set(TIMEOUT(digit)=5)
exten => s,n,Set(TIMEOUT(response)=60)
exten => s,n,Read(blacknr,then-press-pound,,,,)
exten => s,n,SayDigits(${blacknr})
exten => s,n,Playback(if-correct-press&digits/1)
exten => s,n,Noop(Waiting for input)
exten => s,n(end),WaitExten(60,)
exten => s,n,Playback(sorry-youre-having-problems&goodbye)
exten => 1,1,Noop(Deleting: blacklist/${blacknr} ${DB_DELETE(blacklist/${blacknr})})
exten => 1,n,Playback(num-was-successfully&removed)
exten => 1,n,Wait(1)
exten => 1,n,Hangup

[app-cf-on]
exten => _*X.,1,Answer
exten => _*X.,n,Wait(1)
exten => _*X.,n,Set(fromext=${CALLERID(num)})
exten => _*X.,n,Set(toext=${EXTEN:3})
exten => _*X.,n,Playback(extension)
exten => _*X.,n,SayDigits(${fromext})
exten => _*X.,n,Playback(call-fwd-unconditional&is-set-to)
exten => _*X.,n,SayDigits(${toext})
exten => _*X.,n,Playback(if-correct-press&digits/1)
exten => _*X.,n,Noop(Waiting for input)
exten => _*X.,n(end),WaitExten(60,)
exten => _*X.,n,Playback(sorry-youre-having-problems&goodbye)
exten => _*X.,n,Hangup
exten => 1,1,Set(DB(CF/${fromext})=${toext})
exten => 1,n,Playback(vm-saved&goodbye)
exten => 1,n,Hangup

[app-cf-off]
exten => s,1,Answer
exten => s,n,Wait(1)
exten => s,n,Set(fromext=${CALLERID(num)})
exten => s,n,Noop(Deleting: CF/${fromext} ${DB_DELETE(CF/${fromext})})
exten => s,n,Playback(call-fwd-unconditional&de-activated)
exten => s,n,Hangup

[app-cf-busy-on]
exten => _*X.,1,Answer
exten => _*X.,n,Wait(1)
exten => _*X.,n,Set(fromext=${CALLERID(num)})
exten => _*X.,n,Set(toext=${EXTEN:3})
exten => _*X.,n,Playback(extension)
exten => _*X.,n,SayDigits(${fromext})
exten => _*X.,n,Playback(call-fwd-on-busy&is-set-to)
exten => _*X.,n,SayDigits(${toext})
exten => _*X.,n,Playback(if-correct-press&digits/1)
exten => _*X.,n,Noop(Waiting for input)
exten => _*X.,n(end),WaitExten(60,)
exten => _*X.,n,Playback(sorry-youre-having-problems&goodbye)
exten => _*X.,n,Hangup
exten => 1,1,Set(DB(CFB/${fromext})=${toext})
exten => 1,n,Playback(vm-saved&goodbye)
exten => 1,n,Hangup

[app-cf-busy-off]
exten => s,1,Answer
exten => s,n,Wait(1)
exten => s,n,Set(fromext=${CALLERID(num)})
exten => s,n,Noop(Deleting: CFB/${fromext} ${DB_DELETE(CFB/${fromext})})
exten => s,n,Playback(call-fwd-on-busy&de-activated)
exten => s,n,Hangup

[app-cf-unavailable-on]
exten => _*X.,1,Answer
exten => _*X.,n,Wait(1)
exten => _*X.,n,Set(fromext=${CALLERID(num)})
exten => _*X.,n,Set(toext=${EXTEN:3})
exten => _*X.,n,Playback(extension)
exten => _*X.,n,SayDigits(${fromext})
exten => _*X.,n,Playback(call-fwd-no-ans&is-set-to)
exten => _*X.,n,SayDigits(${toext})
exten => _*X.,n,Playback(if-correct-press&digits/1)
exten => _*X.,n,Noop(Waiting for input)
exten => _*X.,n(end),WaitExten(60,)
exten => _*X.,n,Playback(sorry-youre-having-problems&goodbye)
exten => _*X.,n,Hangup
exten => 1,1,Set(DB(CFU/${fromext})=${toext})
exten => 1,n,Playback(vm-saved&goodbye)
exten => 1,n,Hangup

[app-cf-unavailable-off]
exten => s,1,Answer
exten => s,n,Wait(1)
exten => s,n,Set(fromext=${CALLERID(num)})
exten => s,n,Noop(Deleting: CFU/${fromext} ${DB_DELETE(CFU/${fromext})})
exten => s,n(hook_1),Playback(call-fwd-no-ans&de-activated)
exten => s,n,Hangup

[app-getcontact]
exten => s,1(get),execIf($[${LEN(${DB(cidname/${CALLERID(num)})})} > 0],SET,CALLERID(name)=${DB(cidname/${CALLERID(num)})})
exten => s,n,Return()

[from-voip]
include = custom-dod
include = inbound-voip

[inbound-voip]
exten = s,1,GosubIf($["${CALLERID(num)}"!=""]?app-blacklist-check,s,check)
exten = s,n,GosubIf($["${CALLERID(num)}"!=""]?app-getcontact,s,get)
exten = s,n,Set(VOIPDID=${CUT(CUT(SIP_HEADER(To),@,1),:,2)})
exten = s,n,GotoIf($["${VOIPDID}"!="s"]?match)
exten = s,n,Goto(voip-direct,direct,1)
exten = s,n(match),Goto(custom-did-voip,${VOIPDID},1)
exten = _X.,1,GosubIf($["${CALLERID(num)}"!=""]?app-blacklist-check,s,check)
exten = _X.,n,GosubIf($["${CALLERID(num)}"!=""]?app-getcontact,s,get)
exten = _X.,n,Goto(custom-did-voip,${EXTEN},1)

[from-zap]
include = custom-dod
include = inbound-zap

[inbound-zap]
exten = s,1,GosubIf($["${CALLERID(num)}"!=""]?app-blacklist-check,s,check)
exten = s,n,GosubIf($["${CALLERID(num)}"!=""]?app-getcontact,s,get)
exten = s,n,Set(CHAN=${CHANNEL:4})
exten = s,n,Set(CHAN=${CUT(CHAN,-,1)})
exten = s,n,Macro(zap-custom-${CHAN})
exten = s,n,Goto(zap-direct,direct,1)

[asterisk_guitools]
exten = executecommand,1,System(${command})
exten = executecommand,n,Hangup()
exten = record_vmenu,1,Answer
exten = record_vmenu,n,NoCDR()
exten = record_vmenu,n,Playback(vm-intro)
exten = record_vmenu,n,Record(${var1})
exten = record_vmenu,n,Playback(vm-saved)
exten = record_vmenu,n,Playback(vm-goodbye)
exten = record_vmenu,n,Hangup
exten = play_file,1,Answer
exten = play_file,n,NoCDR()
exten = play_file,n,Playback(${var1})
exten = play_file,n,Hangup
hasbeensetup = Y

[dynamic-nway]
exten => _[0-9*#].,1,GotoIf($["${DIALSTATUS}"="ANSWER"]?READPIN)
exten => _[0-9*#].,n,Answer
exten => _[0-9*#].,n,Wait(1)
exten => _[0-9*#].,n(READPIN),Set(PINCOUNT=0)
exten => _[0-9*#].,n,Set(CURRENT_CONF=${EXTEN})
exten => _[0-9*#].,n,Set(DYNAMIC_FEATURES=)
exten => _[0-9*#].,n(READAGAIN),Read(PIN,conf-getpin,,,,)
exten => _[0-9*#].,n,GotoIf($[x${PIN}=x${MEETMEUSERPIN_${EXTEN}}]?conference,USER)
exten => _[0-9*#].,n,GotoIf($[x${PIN}=x${MEETMEADMINPIN_${EXTEN}}]?conference,ADMIN)
exten => _[0-9*#].,n,Set(PINCOUNT=$[${PINCOUNT}+1])
exten => _[0-9*#].,n,GotoIf($[${PINCOUNT}>3]?h,1)
exten => _[0-9*#].,n,Playback(conf-invalidpin)
exten => _[0-9*#].,n,Goto(READAGAIN)
exten => _[0-9*#].,n(CALLERADMIN),Set(MeetStarter=${CALLERID(num)})
exten => _[0-9*#].,n,Set(CURRENT_CONF=${EXTEN})
exten => _[0-9*#].,n,Set(DYNAMIC_FEATURES=)
exten => _[0-9*#].,n,Set(PIN=${MEETMEADMINPIN_${EXTEN}})
exten => _[0-9*#].,n,Goto(conference,1)
exten => _[0-9*#].,n(CALLEDUSER),Set(PIN=${MEETMEUSERPIN_${EXTEN}})
exten => _[0-9*#].,n,Set(CURRENT_CONF=${EXTEN})
exten => _[0-9*#].,n,Set(DYNAMIC_FEATURES=)
exten => _[0-9*#].,n,Goto(conference,1)
exten => h,1,hangup

exten => conference,1,NoOp
exten => conference,n,GotoIf($["foo${MeetStarter}"="foo${CALLERID(num)}"]?ADMIN:USER)
exten => conference,n(ADMIN),Set(MeetOpt=aAX${MEETMEOPT})
exten => conference,n,Set(MEETME_EXIT_CONTEXT=dynamic-nway-invite)
exten => conference,n,Goto(meet)
exten => conference,n(USER),Set(MeetOpt=${MEETMEOPT})
exten => conference,n(meet),Set(MEETME_RECORDINGFORMAT=gsm)
exten => conference,n,Set(MEETME_RECORDINGFILE=/var/spool/asterisk/meetme/${CURRENT_CONF}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${UNIQUEID})
exten => conference,n,MeetMe(${CURRENT_CONF},${MeetOpt},${PIN})
exten => conference,n,Hangup

[dynamic-nway-invite]
exten => 0,1,Set(DYNAMIC_FEATURES=nway-ok#nway-notok)
exten => 0,2,Read(DST,dial,,i)
exten => 0,3,Dial(Local/${DST}@${MEETMEDIALPLAN},,g)
exten => 0,4,Goto(dynamic-nway,${CURRENT_CONF},1)

[macro-nway-notok]
exten => s,1,NoOp(${BRIDGEPEER})
exten => s,2,SoftHangup(${BRIDGEPEER})
exten => s,n,Set(DYNAMIC_FEATURES=)
exten => s,n,ChannelRedirect(${CHANNEL},dynamic-nway,${CURRENT_CONF},CALLERADMIN)

[macro-nway-ok]
exten => s,1,NoOp(${BRIDGEPEER})
exten => s,n,ChannelRedirect(${BRIDGEPEER},dynamic-nway,${CURRENT_CONF},CALLEDUSER)
exten => s,n,Set(DYNAMIC_FEATURES=)
exten => s,n,ChannelRedirect(${CHANNEL},dynamic-nway,${CURRENT_CONF},CALLERADMIN)

[macro-nway-start]
exten => s,1,Set(CURRENT_CONF=${MEETMEEXTEN})
exten => s,n,ChannelRedirect(${BRIDGEPEER},dynamic-nway,${CURRENT_CONF},CALLEDUSER)
exten => s,n,ChannelRedirect(${CHANNEL},dynamic-nway,${CURRENT_CONF},READPIN)

[app-queue]
exten => _[0-9*#].,1,NoOp(QUEUE)
exten => _[0-9*#].,n,Answer
exten => _[0-9*#].,n,Queue(${EXTEN},t,,,${QUEUEWAITTIME})
exten => _[0-9*#].,n,Hangup

[app-queue-unpause]
exten => s,1,NoOp(AGENT-UNPAUSE)
exten => s,n,Read(AGENT,agent-user,,,,)
exten => s,n,UnpauseQueueMember(|Agent/${AGENT})
exten => s,n,Hangup
exten => _X.,1,NoOp(AGENT-UNPAUSE)
exten => _X.,n,UnpauseQueueMember(|Agent/${EXTEN})
exten => _X.,n,Hangup

[app-queue-pause]
exten => s,1,NoOp(AGENT-PAUSE)
exten => s,n,Read(AGENT,agent-user,,,,)
exten => s,n,PauseQueueMember(|Agent/${AGENT})
exten => s,n,Hangup
exten => _X.,1,NoOp(AGENT-PAUSE)
exten => _X.,n,PauseQueueMember(|Agent/${EXTEN})
exten => _X.,n,Hangup

[app-agent-logoff]
exten => s,1,NoOp(AGENT-LOGOFF)
exten => s,n,Read(AGENT,agent-user,,,,)
exten => s,n,System(asterisk -rx "agent logoff Agent/${AGENT}")
exten => s,n,Playback(agent-loggedoff)
exten => s,n,Playback(vm-goodbye)
exten => s,n,Hangup
exten => _X.,1,NoOp(AGENT-LOGOFF)
exten => _X.,n,System(asterisk -rx "agent logoff Agent/${EXTEN}")
exten => _X.,n,Hangup